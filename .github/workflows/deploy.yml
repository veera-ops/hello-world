name: Build and Push to ECR

on:
  push:
    branches:
      - dev
      - qa
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
      
    - name: Set ECR repository based on branch
      run: |
        BRANCH_NAME=$(echo "${GITHUB_REF##*/}")
        if [ "$BRANCH_NAME" = "dev" ]; then
          echo "REPO_NAME=${{ secrets.ECR_REPO_DEV }}" >> $GITHUB_ENV
        elif [ "$BRANCH_NAME" = "qa" ]; then
          echo "REPO_NAME=${{ secrets.ECR_REPO_QA }}" >> $GITHUB_ENV
        elif [ "$BRANCH_NAME" = "master" ]; then
          echo "REPO_NAME=${{ secrets.ECR_REPO_MASTER }}" >> $GITHUB_ENV
        else
          echo "Unsupported branch: $BRANCH_NAME"
          exit 1
        fi
    - name: Get commit hash
      id: get-commit-hash
      run: echo "::set-output name=commit-hash::$(git rev-parse --short HEAD)"
    - name: Get timestamp
      id: get-timestamp
      run: echo "::set-output name=timestamp::$(date +'%Y-%m-%d-%H-%M')"
    
    - name: Build Docker image
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: ${{ steps.get-commit-hash.outputs.commit-hash }}-${{ steps.get-timestamp.outputs.timestamp }}

      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
